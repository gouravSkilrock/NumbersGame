package com.skilrock.lms.coreEngine.commercialService.common;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
//import org.codehaus.xfire.transport.http.XFireServletController;

import com.skilrock.lms.beans.CSLoginBean;
import com.skilrock.lms.beans.CSOrgBean;
import com.skilrock.lms.beans.CSSaleBean;

//Generated by MyEclipse

public class RMSSaleImpl implements IRMSSale {
	static Log logger = LogFactory.getLog(RMSSaleImpl.class);
		
	public CSSaleBean saleOperation(String userName, int retOrgId,
			double balance, String prodCode, double unitPrice, int multiple,
			double mrpAmt, double netAmt, int CSRefTxId, int RMSRefId,
			CSOrgBean orgBean, String authCode, String status, int ErrorCode) {
		
		/*HttpSession session = XFireServletController.getRequest().getSession();
		if(session == null){
			
		}else{
			if(((String)session.getServletContext().getAttribute("ALLOWED IP")).equalsIgnoreCase(XFireServletController.getRequest().getRemoteHost()));
		}*/
		
		//System.out.println("This is client IP: "+XFireServletController.getRequest().getRemoteHost());
		CSSaleBean saleBean = new CSSaleBean();
		logger.debug("Sale Operation Request:--- Date:" + new java.util.Date()
				+ ", userName: " + userName + ", retailer Org Id: " + retOrgId
				+ ", balance: " + balance + ", product Code: " + prodCode
				+ ", unitPrice: " + unitPrice + ", multiple: " + multiple
				+ ", MRP Amt: " + mrpAmt + ", Net Amt: " + netAmt
				+ ", CS Ref.Tx.Id: " + CSRefTxId + ", RMS Ref.Id: " + RMSRefId
				+ ", OrgBean: " + orgBean + ", AuthCode: " + authCode
				+ ", Status: " + status + ", ErrorCode: " + ErrorCode);
		saleBean.setUserName(userName);
		saleBean.setRetOrgId(retOrgId); // BLANK IN REQUEST
		saleBean.setBalance(balance);
		saleBean.setProdCode(prodCode);
		saleBean.setUnitPrice(unitPrice);
		saleBean.setMult(multiple);
		saleBean.setMrpAmt(mrpAmt);
		saleBean.setNetAmt(netAmt); // BLANK IN REQUEST
		saleBean.setCSRefTxId(CSRefTxId);
		saleBean.setRMSRefId(RMSRefId); // BLANK IN REQUEST
		saleBean.setOrgBean(orgBean); // BLANK IN REQUEST
		saleBean.setAuthCode(authCode);
		CSSaleTransactionsHelper helper = new CSSaleTransactionsHelper();
		saleBean = helper.CommServSaleBalDeduction(saleBean);
		logger.debug("Sale Operation Response:--- Date:" + new java.util.Date()
				+ " userName: " + saleBean.getUserName()
				+ ", retailer Org Id: " + saleBean.getRetOrgId()
				+ ", balance: " + saleBean.getBalance() + ", product Code: "
				+ saleBean.getProdCode() + ", unitPrice: "
				+ saleBean.getUnitPrice() + ", multiple: " + saleBean.getMult()
				+ ", MRP Amt: " + saleBean.getMrpAmt() + ", Net Amt: "
				+ saleBean.getNetAmt() + ", CS Ref.Tx.Id: "
				+ saleBean.getCSRefTxId() + ", RMS Ref.Id: "
				+ saleBean.getRMSRefId() + ",AuthCode: "
				+ saleBean.getAuthCode() + ", Status: " + saleBean.getStatus()
				+ ", ErrorCode: " + saleBean.getErrorCode());
		return saleBean;
	}

	public CSSaleBean saleCancelOperation(int retOrgId, double balance,
			int CSRefTxIdForRefund, int RMSRefIdForRefund, int CSRefTxId,
			int RMSRefId, String authCode, String Status, int ErrorCode,
			String reasonForCancel) {
		logger.debug("SaleCancel Operation Request:--- Date:"
				+ new java.util.Date() + ", retailer Org Id: " + retOrgId
				+ ", balance: " + balance + ", CS Ref.Tx.For Refund: "
				+ CSRefTxIdForRefund + ", RMS Ref.Id For Refund: "
				+ RMSRefIdForRefund + ", CS Ref.Tx.Id: " + CSRefTxId
				+ ", RMS Ref.Id: " + RMSRefId + ", AuthCode: " + authCode
				+ ", Status: " + Status + ", ErrorCode: " + ErrorCode);
		CSSaleBean saleBean = new CSSaleBean();
		saleBean.setRetOrgId(retOrgId); // BLANK IN REQUEST
		saleBean.setBalance(balance);
		saleBean.setCSRefTxIdForRefund(CSRefTxIdForRefund);
		saleBean.setRMSRefIdForRefund(RMSRefIdForRefund);
		saleBean.setCSRefTxId(CSRefTxId);
		saleBean.setRMSRefId(RMSRefId);
		saleBean.setAuthCode(authCode);
		saleBean.setReasonForCancel(reasonForCancel);
		CSSaleTransactionsHelper helper = new CSSaleTransactionsHelper();
		saleBean = helper.CommServSaleRefund(saleBean);
		logger.debug("SaleCancel Operation Response:--- Date:"
				+ new java.util.Date() + ", retailer Org Id: "
				+ saleBean.getRetOrgId() + ", balance: "
				+ saleBean.getBalance() + ", CS Ref.Tx.For Refund: "
				+ saleBean.getCSRefTxIdForRefund()
				+ ", RMS Ref.Id For Refund: " + saleBean.getRMSRefIdForRefund()
				+ ", CS Ref.Tx.Id: " + saleBean.getCSRefTxId()
				+ ", RMS Ref.Id: " + saleBean.getRMSRefId() + ", AuthCode: "
				+ saleBean.getAuthCode() + ", Status: " + saleBean.getStatus()
				+ ", ErrorCode: " + saleBean.getErrorCode());
		return saleBean;
	}

	public CSLoginBean terminalLoginOperation(String userName, double balance) {
		logger.debug("Login Operation Request:--- Date:" + new java.util.Date()
				+ ", UserName: " + userName + ", Balance" + balance);
		CSLoginBean loginBean = new CSLoginBean();
		loginBean.setUserName(userName);
		loginBean.setBalance(balance);
		CSTerminalHelper helper = new CSTerminalHelper();
		loginBean = helper.getBalanceForTerminal(loginBean);
		logger.debug("Login Operation Response:--- Date:"
				+ new java.util.Date() + ", UserName: "
				+ loginBean.getUserName() + ", Balance"
				+ loginBean.getBalance());
		return loginBean;
	}

	public CSLoginBean terminalReprintAuthOperation(String userName,
			int CSRefTxId, int RMSRefId, String authCode, String status,
			int errorCode) {
		logger.debug("ReprintAuth Operation Request:--- Date:"
				+ new java.util.Date() + "UserName: " + userName
				+ ", CSRefTxId: " + CSRefTxId + ", RMSRefId: " + RMSRefId
				+ ", AuthCode:" + authCode + ", Status:" + status
				+ ", ErrorCode:" + errorCode);
		CSLoginBean loginBean = new CSLoginBean();
		loginBean.setUserName(userName);
		loginBean.setCSRefTxId(CSRefTxId);
		loginBean.setRMSRefTxId(RMSRefId);
		loginBean.setAuthCode(authCode);
		loginBean.setStatus(status);
		loginBean.setErrorCode(errorCode);
		CSTerminalHelper helper = new CSTerminalHelper();
		loginBean = helper.getReprintAuthorization(loginBean);
		logger.debug("ReprintAuth Operation Response:--- Date:"
				+ new java.util.Date() + "UserName: " + loginBean.getUserName()
				+ ", CSRefTxId: " + loginBean.getCSRefTxId() + ", RMSRefId: "
				+ loginBean.getRMSRefTxId() + ", AuthCode:"
				+ loginBean.getAuthCode() + ", Status:" + loginBean.getStatus()
				+ ", ErrorCode:" + loginBean.getErrorCode());
		return loginBean;
	}
}